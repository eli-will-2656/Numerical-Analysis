% Goal: Use Newton's Method to approximate the root of f(x) = x^3 -2x - 5

% (1) Set up problem
x = 2;                  % Initial guess of root

e = 10*eps;         % Stop after successive differences < e
del = e;                % Stop if derivative is too small

nmax = 1000;             % Maximum number of step of Newton's method


% (2) Apply Newton's Method
fx = f(x);
fprintf("n = 0 | x = %.15f | fx = %.15f | x - r = %2.1d\n", x, fx,  x - 2.094551481542327)
for n=1:nmax
    fp = f_prime(x);
    if fp < del
        fprintf("Small derivative")
        break
    end

    d = fx / fp;
    x = x - d;
    fx = f(x);
    diff = x - 2.094551481542327;
    fprintf("n = %i | x = %.15f | fx = %.15f | x - r = %2.1d\n", n, x, fx, x - 2.094551481542327)

    if abs(d) < e
        fprintf("CONVERGENCE\n")
        break
    end
end

fprintf("The sequence seems to converge quadratically as the number of correct digits of our approximation doubles each iteration.\n" + ...
    "Furthermore, we have proved that if f in 'nice' and r is a simple root, the sequence of approximations of r generated by Newton's method will converge quadratically.")


% (Optional) Define an alias for polynomial
function y = f(x)
y = P2_func(x);
end

function y = f_prime(x)
y = P2_deriv(x);
end
